{"version":3,"sources":["js/03-promises.js"],"names":["form","document","querySelector","delay","step","amount","position","timer","addEventListener","onFormSubmit","s","value","e","preventDefault","setTimeout","i","createPromise","then","console","log","catch","shouldResolve","Math","random","promise","Promise","resolve","reject"],"mappings":";AAAA,MAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,gBAC/BE,EAAOH,SAASC,cAAc,eAC9BG,EAASJ,SAASC,cAAc,iBACtC,IAAII,EAAW,EACXC,EAAQ,OACZP,EAAKQ,iBAAiB,SAAUC,GAChC,IAAIC,EAAIN,EAAKO,MACb,SAASF,EAAaG,GACpBA,EAAEC,iBAEiBC,WAAW,KACvB,IAAA,IAAIC,EAAI,EAAGA,EAAIV,EAAOM,MAAOI,GAAK,EAErCC,EADAV,EAAWS,EACaL,GACrBO,KAAK,EAAGX,SAAAA,EAAUH,MAAAA,MACjBe,QAAQC,2BAA2Bb,QAAeH,UAEnDiB,MAAM,EAAGd,SAAAA,EAAUH,MAAAA,MAClBe,QAAQC,0BAA0Bb,QAAeH,UAErDO,GAAKN,EAAKO,OAEXR,EAAMQ,OAGX,SAASK,EAAcV,EAAUH,GACzBkB,MAAAA,EAAgBC,KAAKC,SAAW,GAU/BC,OATS,IAAIC,QAAQ,CAACC,EAASC,KACpCb,WAAW,KACLO,EACFK,EAAQ,CAAEpB,SAAAA,EAAUH,MAAAA,IAEpBwB,EAAO,CAAErB,SAAAA,EAAUH,MAAAA,KAEpBA","file":"03-promises.ab884979.js","sourceRoot":"../src","sourcesContent":["const form = document.querySelector('.form');\nconst delay = document.querySelector('[name=delay]');\nconst step = document.querySelector('[name=step]');\nconst amount = document.querySelector('[name=amount]');\nlet position = 0;\nlet timer = 'null';\nform.addEventListener('submit', onFormSubmit);\nlet s = step.value;\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const firsrTimer = setTimeout(() => {\n    for (let i = 0; i < amount.value; i += 1) {\n      position = i;\n      createPromise(position, s)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay} ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay} ms`);\n        });\n      s += step.value;\n    }\n  }, delay.value);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n"]}